<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean id="monitorableRegistry" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="com.custardsource.parfait.MonitorableRegistry.DEFAULT_REGISTRY"/>
    </bean>

    <bean name="pcpMonitorBridge" class="com.custardsource.parfait.pcp.PcpMonitorBridge">
        <constructor-arg>
            <bean id="mmvPcpWriter" class="com.custardsource.parfait.dxm.PcpMmvWriter">
                <constructor-arg value="parfaitagent"/>
                <constructor-arg>
                    <bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
                        <property name="staticField" value="com.custardsource.parfait.dxm.IdentifierSourceSet.DEFAULT_SET"/>
                    </bean>
                </constructor-arg>
                <property name="flags">
                    <set value-type="com.custardsource.parfait.dxm.PcpMmvWriter.MmvFlag">
                        <value>MMV_FLAG_PROCESS</value>
                    </set>
                </property>
                <property name="clusterIdentifier" value="42"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean name="mmvPcpBridge" class="com.custardsource.parfait.spring.SelfStartingMonitoringView">
        <constructor-arg ref="pcpMonitorBridge"/>
    </bean>

    <bean class="com.custardsource.parfait.MonitoredConstant">
        <constructor-arg value="java.jvm_version"/>
        <constructor-arg value="JVM version string"/>
        <constructor-arg value="${java.runtime.version}"/>
    </bean>

    <bean name="monitoredMBean" class="com.custardsource.parfait.jmx.MonitoredMBeanAttributeFactory"
          abstract="true">
        <property name="monitorableRegistry" ref="monitorableRegistry"/>
        <property name="updateInterval" value="1000"/>
    </bean>

    <bean name="monitoredConstantMBean" class="com.custardsource.parfait.jmx.MonitoredMBeanAttributeFactory"
          abstract="true">
        <property name="monitorableRegistry" ref="monitorableRegistry"/>
        <property name="valueSemantics" value="CONSTANT"/>
    </bean>

    <bean id="secondUnit" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="javax.measure.unit.SI.si"/>
        <property name="arguments">
            <bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
                <property name="staticField" value="javax.measure.unit.SI.SECOND"/>
            </bean>
        </property>
    </bean>

    <bean id="millisecondUnit" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="javax.measure.unit.SI.MILLI"/>
        <property name="arguments">
            <bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
                <property name="staticField" value="javax.measure.unit.SI.SECOND"/>
            </bean>
        </property>
    </bean>

    <bean id="byteUnit" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="javax.measure.unit.NonSI.BYTE"/>
    </bean>

    <bean id="jmxServer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.springframework.jmx.support.JmxUtils.locateMBeanServer" />
    </bean>

    <!-- this list is to force Spring to access the actual beans from the following factories -->
    <!-- util:list id="monitoredMBeans" -->
        <!-- java.lang:type=Runtime monitors -->

        <bean parent="monitoredMBean">
            <constructor-arg value="java.uptime"/>
            <constructor-arg value="Application uptime (msec)"/>
            <constructor-arg value="java.lang:type=Runtime"/>
            <constructor-arg value="Uptime"/>
            <property name="unit" ref="millisecondUnit"/>
        </bean>

        <bean parent="monitoredConstantMBean">
            <constructor-arg value="java.runtime_name"/>
            <constructor-arg value="An internal Java process identifier"/>
            <constructor-arg value="java.lang:type=Runtime"/>
            <constructor-arg value="Name"/>
            <property name="unit">
                <null/>
            </property>
        </bean>

        <!-- java.lang:type=Memory monitors -->

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.heap.init"/>
            <constructor-arg value="Initial Java heap memory configuration size"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="HeapMemoryUsage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.heap.used"/>
            <constructor-arg value="Actual amount of memory in use for the Java heap"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="HeapMemoryUsage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.heap.committed"/>
            <constructor-arg value="Virtual memory size"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="HeapMemoryUsage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.heap.max"/>
            <constructor-arg value="Maximum Java heap memory size"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="HeapMemoryUsage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.nonheap.init"/>
            <constructor-arg value="Initial Java heap memory configuration size"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="NonHeapMemoryUsage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.nonheap.used"/>
            <constructor-arg value="Actual memory in use by Java excluding heap space"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="NonHeapMemoryUsage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.nonheap.committed"/>
            <constructor-arg value="Virtual memory size"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="NonHeapMemoryUsage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.nonheap.max"/>
            <constructor-arg value="Maximum Java memory size excluding heap space"/>
            <constructor-arg value="java.lang:type=Memory"/>
            <constructor-arg value="NonHeapMemoryUsage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.permgen.init"/>
            <constructor-arg value="Initial permgen memory configuration size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Perm Gen|Perm Gen|CMS Perm Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.permgen.used"/>
            <constructor-arg value="Actual memory in use in permgen space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Perm Gen|Perm Gen|CMS Perm Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.permgen.committed"/>
            <constructor-arg value="Virtual memory size for permgen space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Perm Gen|Perm Gen|CMS Perm Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.permgen.max"/>
            <constructor-arg value="Maximum permgen memory size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Perm Gen|Perm Gen|CMS Perm Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.eden.init"/>
            <constructor-arg value="Initial Eden memory configuration size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Eden Space|Eden Space|Par Eden Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.eden.used"/>
            <constructor-arg value="Actual memory in use in Eden space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Eden Space|Eden Space|Par Eden Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.eden.committed"/>
            <constructor-arg value="Virtual memory size for Eden space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Eden Space|Eden Space|Par Eden Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.eden.max"/>
            <constructor-arg value="Maximum Eden memory size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Eden Space|Eden Space|Par Eden Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.survivor.init"/>
            <constructor-arg value="Initial survivor memory configuration size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Survivor Space|Survivor Space|Par Survivor Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.survivor.used"/>
            <constructor-arg value="Actual memory in use in survivor space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Survivor Space|Survivor Space|Par Survivor Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.survivor.committed"/>
            <constructor-arg value="Virtual memory size for survivor space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Survivor Space|Survivor Space|Par Survivor Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.survivor.max"/>
            <constructor-arg value="Maximum survivor memory size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Survivor Space|Survivor Space|Par Survivor Space"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.codecache.init"/>
            <constructor-arg value="Initial codecache memory configuration size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=Code Cache"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.codecache.used"/>
            <constructor-arg value="Actual memory in use in codecache space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=Code Cache"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.codecache.committed"/>
            <constructor-arg value="Virtual memory size for codecache space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=Code Cache"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.codecache.max"/>
            <constructor-arg value="Maximum codecache memory size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=Code Cache"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.tenured.init"/>
            <constructor-arg value="Initial tenured memory configuration size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Old Gen|Tenured Gen|CMS Old Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="init"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.tenured.used"/>
            <constructor-arg value="Actual memory in use in tenured space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Old Gen|Tenured Gen|CMS Old Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="used"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.tenured.committed"/>
            <constructor-arg value="Virtual memory size for tenured space"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Old Gen|Tenured Gen|CMS Old Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="committed"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.tenured.max"/>
            <constructor-arg value="Maximum tenured memory size"/>
            <constructor-arg value="java.lang:type=MemoryPool,name=PS Old Gen|Tenured Gen|CMS Old Gen"/>
            <constructor-arg value="Usage"/>
            <constructor-arg value="max"/>
            <property name="unit" ref="byteUnit"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.gc.full.count"/>
            <constructor-arg value="Count of JVM full garbage collections"/>
            <constructor-arg value="java.lang:type=GarbageCollector,name=MarkSweepCompact|PS MarkSweep|ConcurrentMarkSweep"/>
            <constructor-arg value="CollectionCount"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.gc.full.time"/>
            <constructor-arg value="Time spent performing full garbage collections"/>
            <constructor-arg value="java.lang:type=GarbageCollector,name=MarkSweepCompact|PS MarkSweep|ConcurrentMarkSweep"/>
            <constructor-arg value="CollectionTime"/>
            <property name="unit" ref="millisecondUnit"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.gc.minor.count"/>
            <constructor-arg value="Count of JVM minor garbage collections"/>
            <constructor-arg value="java.lang:type=GarbageCollector,name=Copy|PS Scavenge|ParNew"/>
            <constructor-arg value="CollectionCount"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.memory.gc.minor.time"/>
            <constructor-arg value="Time spent performing minor garbage collections"/>
            <constructor-arg value="java.lang:type=GarbageCollector,name=Copy|PS Scavenge|ParNew"/>
            <constructor-arg value="CollectionTime"/>
            <property name="unit" ref="millisecondUnit"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.jvm.compilation"/>
            <constructor-arg value="Time spent in the JVM doing Java bytecode compilation"/>
            <constructor-arg value="java.lang:type=Compilation"/>
            <constructor-arg value="TotalCompilationTime"/>
            <property name="unit" ref="millisecondUnit"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.jvm.classloader.loaded.current"/>
            <constructor-arg value="Number of classes currently loaded in memory by the classloader"/>
            <constructor-arg value="java.lang:type=ClassLoading"/>
            <constructor-arg value="LoadedClassCount"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.jvm.classloader.unloaded.total"/>
            <constructor-arg value="Number of classes unloaded from memory by the classloader"/>
            <constructor-arg value="java.lang:type=ClassLoading"/>
            <constructor-arg value="UnloadedClassCount"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

        <bean parent="monitoredMBean">
            <constructor-arg value="java.jvm.classloader.loaded.total"/>
            <constructor-arg value="Total number of classes loaded by the classloader"/>
            <constructor-arg value="java.lang:type=ClassLoading"/>
            <constructor-arg value="TotalLoadedClassCount"/>
            <property name="valueSemantics" value="MONOTONICALLY_INCREASING"/>
        </bean>

    <!-- /util:list -->

    <bean id="systemTimeMonitor" class="com.custardsource.parfait.PollingMonitoredValue">
        <constructor-arg value="java.timestamp"/>
        <constructor-arg value="Current time on server where the application is running"/>
        <constructor-arg ref="monitorableRegistry"/>
        <constructor-arg type="int" value="15000"/>
        <constructor-arg>
            <bean id="systemTimePoller" class="com.custardsource.parfait.SystemTimePoller"/>
        </constructor-arg>
        <constructor-arg type="com.custardsource.parfait.ValueSemantics" value="FREE_RUNNING"/>
        <constructor-arg type="javax.measure.unit.Unit" ref="millisecondUnit"/>
    </bean>

    <!-- TODO: JDBC metrics
    <bean id="dbReceivedBytesCallback" class="net.sourceforge.jtds.jdbc.ParfaitByteCallback">
        <constructor-arg ref="monitorableRegistry"/>
        <constructor-arg value="in"/>
    </bean>

    <bean id="dbSentBytesCallback" class="net.sourceforge.jtds.jdbc.ParfaitByteCallback">
        <constructor-arg ref="monitorableRegistry"/>
        <constructor-arg value="out"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="net.sourceforge.jtds.jdbc.ResponseStream.setByteCallback"/>
        <property name="arguments" ref="dbReceivedBytesCallback"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="net.sourceforge.jtds.jdbc.RequestStream.setByteCallback"/>
        <property name="arguments" ref="dbSentBytesCallback"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.aconex.utilities.db.LoggingDriver.setBytesInCallback"/>
        <property name="arguments" ref="dbReceivedBytesCallback"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.aconex.utilities.db.LoggingDriver.setBytesOutCallback"/>
        <property name="arguments" ref="dbSentBytesCallback"/>
    </bean>
    -->

    <!-- TODO: CodaHale metrics
    <bean id="healthCheckRegistry" class="com.codahale.metrics.health.HealthCheckRegistry"/>

    <bean id="healthCheckBeanPostProcessor" class="com.ryantenney.metrics.spring.HealthCheckBeanPostProcessor">
        <constructor-arg ref="healthCheckRegistry"/>
    </bean>

    <bean id="threadDeadlockHealthCheck" class="com.codahale.metrics.health.jvm.ThreadDeadlockHealthCheck"/>
    -->

</beans>
